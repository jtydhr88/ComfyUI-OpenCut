{"version":3,"file":"static/chunks/app/editor/page-6d45c737b498aa25.js","mappings":"gFAAA,uCAAuF,mOCqBvF,SAASA,IACP,IAAMC,EAAeC,CAAAA,EAAAA,EAAAA,eAAAA,CAAeA,GACrBC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,GACxB,IAAMC,EAAYH,EAAaI,GAAG,CAAC,WAE7B,YACJC,CAAU,cACVC,CAAY,aACZC,CAAW,UACXC,CAAQ,eACRC,CAAa,iBACbC,CAAe,CACfC,gBAAc,aACdC,CAAW,iBACXC,CAAe,oBACfC,CAAkB,CACnB,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,GAEX,eACJC,CAAa,aACbC,CAAW,kBACXC,CAAgB,CACjB,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,CAAeA,GA8BnB,MA5BAC,CAAAA,EAAAA,EAAAA,CAAAA,CAAmBA,GAEnBC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KAuBRC,CAtBoB,UAElB,GAAI,CAACnB,EAAW,MACdoB,CAAAA,EAAAA,EAAAA,EAAAA,CAAkBA,GAKpB,GAAIP,OAAAA,EAAAA,KAAAA,EAAAA,EAAeQ,EAAAA,IAAOrB,EAI1B,GAAI,CAEF,GANEa,EAAiC,CAM7BC,EAAYd,EACpB,CAAE,MAAOsB,EAAO,CAGdF,CAAAA,EAAAA,EAAAA,EAAAA,CAAkBA,EACpB,EACF,GAGF,EAAG,CAACpB,EAAWa,EAAeC,EAAY,EAGxC,UAACS,EAAAA,CAAcA,CAAAA,UACb,WAACC,MAAAA,CAAIC,UAAU,0EACb,UAACC,EAAAA,CAAYA,CAAAA,CAAAA,GACb,UAACF,MAAAA,CAAIC,UAAU,kCACb,WAACE,EAAAA,EAAmBA,CAAAA,CAClBC,UAAU,WACVH,UAAU,wCAEV,UAACI,EAAAA,EAAcA,CAAAA,CACbC,YAAa1B,EACb2B,QAAS,GACTC,QAAS,GACTC,SAAUzB,EACViB,UAAU,mBAGV,WAACE,EAAAA,EAAmBA,CAAAA,CAClBC,UAAU,aACVH,UAAU,6CAGV,UAACI,EAAAA,EAAcA,CAAAA,CACbC,YAAa5B,EACb6B,QAAS,GACTC,QAAS,GACTC,SAAU3B,EACVmB,UAAU,8BAEV,UAACS,EAAAA,CAAUA,CAAAA,CAAAA,KAGb,UAACC,EAAAA,EAAeA,CAAAA,CAACC,UAAU,MAG3B,UAACP,EAAAA,EAAcA,CAAAA,CACbC,YAAa3B,EACb4B,QAAS,GACTE,SAAU1B,EACVkB,UAAU,kCAEV,UAACY,EAAAA,CAAYA,CAAAA,CAAAA,KAGf,UAACF,EAAAA,EAAeA,CAAAA,CAACC,UAAU,MAE3B,UAACP,EAAAA,EAAcA,CAAAA,CACbC,YAAapB,EACbqB,QAAS,GACTC,QAAS,GACTC,SAAUtB,EACVc,UAAU,mBAEV,UAACa,EAAAA,CAAeA,CAAAA,CAAAA,UAKtB,UAACH,EAAAA,EAAeA,CAAAA,CAACC,UAAU,MAG3B,UAACP,EAAAA,EAAcA,CAAAA,CACbC,YAAazB,EACb0B,QAAS,GACTC,QAAS,GACTC,SAAUxB,EACVgB,UAAU,6BAEV,UAACc,EAAAA,CAAQA,CAAAA,CAAAA,UAIf,UAACC,EAAAA,CAAUA,CAAAA,CAAAA,OAInB,CAEe,SAASC,IACtB,MACE,UAACC,EAAAA,QAAQA,CAAAA,CAACC,SACR,UAACnB,MAAAA,CAAIC,UAAU,4EACb,UAACD,MAAAA,CAAIC,UAAU,iCAAwB,iCAGzC,UAAC7B,EAAAA,CAAAA,IAGP","sources":["webpack://_N_E/","webpack://_N_E/./src/app/editor/page.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"I:\\\\OpenCut\\\\apps\\\\web\\\\src\\\\app\\\\editor\\\\page.tsx\");\n","\"use client\";\r\n\r\nimport { useEffect, Suspense } from \"react\";\r\nimport { useRouter, useSearchParams } from \"next/navigation\";\r\nimport {\r\n  ResizablePanelGroup,\r\n  ResizablePanel,\r\n  ResizableHandle,\r\n} from \"../../components/ui/resizable\";\r\nimport { MediaPanel } from \"../../components/editor/media-panel\";\r\nimport { PropertiesPanel } from \"../../components/editor/properties-panel\";\r\nimport { Timeline } from \"../../components/editor/timeline\";\r\nimport { PreviewPanel } from \"../../components/editor/preview-panel\";\r\nimport { EditorHeader } from \"@/components/editor-header\";\r\nimport { usePanelStore } from \"@/stores/panel-store\";\r\nimport { useProjectStore } from \"@/stores/project-store\";\r\nimport { EditorProvider } from \"@/components/editor-provider\";\r\nimport { usePlaybackControls } from \"@/hooks/use-playback-controls\";\r\nimport { Onboarding } from \"@/components/onboarding\";\r\nimport { navigateToProjects } from \"@/lib/navigation\";\r\n\r\nfunction EditorContent() {\r\n  const searchParams = useSearchParams();\r\n  const router = useRouter();\r\n  const projectId = searchParams.get('project');\r\n\r\n  const {\r\n    toolsPanel,\r\n    previewPanel,\r\n    mainContent,\r\n    timeline,\r\n    setToolsPanel,\r\n    setPreviewPanel,\r\n    setMainContent,\r\n    setTimeline,\r\n    propertiesPanel,\r\n    setPropertiesPanel,\r\n  } = usePanelStore();\r\n\r\n  const {\r\n    activeProject,\r\n    loadProject,\r\n    createNewProject,\r\n  } = useProjectStore();\r\n\r\n  usePlaybackControls();\r\n\r\n  useEffect(() => {\r\n    const initProject = async () => {\r\n      // If no project ID in URL, redirect to projects page\r\n      if (!projectId) {\r\n        navigateToProjects();\r\n        return;\r\n      }\r\n\r\n      // Check if project is already loaded\r\n      if (activeProject?.id === projectId) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Try to load the project\r\n        await loadProject(projectId);\r\n      } catch (error) {\r\n        console.error(\"Failed to load project:\", error);\r\n        // Redirect to projects page if project not found\r\n        navigateToProjects();\r\n      }\r\n    };\r\n\r\n    initProject();\r\n  }, [projectId, activeProject, loadProject]);\r\n\r\n  return (\r\n    <EditorProvider>\r\n      <div className=\"h-screen w-screen flex flex-col bg-background overflow-hidden\">\r\n        <EditorHeader />\r\n        <div className=\"flex-1 min-h-0 min-w-0\">\r\n          <ResizablePanelGroup\r\n            direction=\"vertical\"\r\n            className=\"h-full w-full gap-[0.18rem]\"\r\n          >\r\n            <ResizablePanel\r\n              defaultSize={mainContent}\r\n              minSize={30}\r\n              maxSize={85}\r\n              onResize={setMainContent}\r\n              className=\"min-h-0\"\r\n            >\r\n              {/* Main content area */}\r\n              <ResizablePanelGroup\r\n                direction=\"horizontal\"\r\n                className=\"h-full w-full gap-[0.19rem] px-3\"\r\n              >\r\n                {/* Tools Panel */}\r\n                <ResizablePanel\r\n                  defaultSize={toolsPanel}\r\n                  minSize={15}\r\n                  maxSize={40}\r\n                  onResize={setToolsPanel}\r\n                  className=\"min-w-0 rounded-sm\"\r\n                >\r\n                  <MediaPanel />\r\n                </ResizablePanel>\r\n\r\n                <ResizableHandle withHandle />\r\n\r\n                {/* Preview Area */}\r\n                <ResizablePanel\r\n                  defaultSize={previewPanel}\r\n                  minSize={30}\r\n                  onResize={setPreviewPanel}\r\n                  className=\"min-w-0 min-h-0 flex-1\"\r\n                >\r\n                  <PreviewPanel />\r\n                </ResizablePanel>\r\n\r\n                <ResizableHandle withHandle />\r\n\r\n                <ResizablePanel\r\n                  defaultSize={propertiesPanel}\r\n                  minSize={15}\r\n                  maxSize={40}\r\n                  onResize={setPropertiesPanel}\r\n                  className=\"min-w-0\"\r\n                >\r\n                  <PropertiesPanel />\r\n                </ResizablePanel>\r\n              </ResizablePanelGroup>\r\n            </ResizablePanel>\r\n\r\n            <ResizableHandle withHandle />\r\n\r\n            {/* Timeline */}\r\n            <ResizablePanel\r\n              defaultSize={timeline}\r\n              minSize={15}\r\n              maxSize={70}\r\n              onResize={setTimeline}\r\n              className=\"min-h-0 px-3 pb-3\"\r\n            >\r\n              <Timeline />\r\n            </ResizablePanel>\r\n          </ResizablePanelGroup>\r\n        </div>\r\n        <Onboarding />\r\n      </div>\r\n    </EditorProvider>\r\n  );\r\n}\r\n\r\nexport default function Editor() {\r\n  return (\r\n    <Suspense fallback={\r\n      <div className=\"h-screen w-screen flex items-center justify-center bg-background\">\r\n        <div className=\"text-muted-foreground\">Loading editor...</div>\r\n      </div>\r\n    }>\r\n      <EditorContent />\r\n    </Suspense>\r\n  );\r\n}"],"names":["EditorContent","searchParams","useSearchParams","useRouter","projectId","get","toolsPanel","previewPanel","mainContent","timeline","setToolsPanel","setPreviewPanel","setMainContent","setTimeline","propertiesPanel","setPropertiesPanel","usePanelStore","activeProject","loadProject","createNewProject","useProjectStore","usePlaybackControls","useEffect","initProject","navigateToProjects","id","error","EditorProvider","div","className","EditorHeader","ResizablePanelGroup","direction","ResizablePanel","defaultSize","minSize","maxSize","onResize","MediaPanel","ResizableHandle","withHandle","PreviewPanel","PropertiesPanel","Timeline","Onboarding","Editor","Suspense","fallback"],"sourceRoot":"","ignoreList":[]}